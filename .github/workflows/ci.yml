on: pull_request

name: Continuous Integration

permissions:
  contents: read
  checks: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
      - uses: dtolnay/rust-toolchain@stable
      # use `--frozen-lockfile` to fail immediately if the committed yarn.lock needs updates
      # https://yarnpkg.com/lang/en/docs/cli/install/#toc-yarn-install-frozen-lockfile
      - run: yarn --frozen-lockfile
      - run: yarn lint

  flow:
    name: Flow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
      - run: yarn --frozen-lockfile
      - run: yarn flow check

  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: PR Benchmarks
        uses: parcel-bundler/parcel-benchmark-action@master
        env:
          PARCEL_BENCHMARK_APIKEY: ${{ secrets.PARCEL_BENCHMARK_APIKEY }}

  build-native:
    name: Build native packages (${{matrix.os}})
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 16
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: false
      - run: yarn --frozen-lockfile
      - run: yarn build-native-release
      # Compiling Rust on Linux is much faster, so run the platform-independent unit tests there
      - run: yarn test:unit-rust
        if: ${{matrix.os == 'ubuntu-latest'}}
      - name: Upload builds
        uses: actions/upload-artifact@v3
        with:
          name: build-native-${{matrix.os}}
          path: |
            packages/optimizers/image/*.node
            packages/transformers/js/*.node
            packages/utils/fs-search/*.node
            packages/utils/hash/*.node

  unit_tests:
    name: Unit tests (${{matrix.os}}, Node ${{matrix.node}})
    strategy:
      matrix:
        node: [14, 16]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.os}}
    needs: build-native
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: ${{matrix.node}}
      - uses: actions/download-artifact@v3
        with:
          name: build-native-${{matrix.os}}
          path: packages
      - name: Bump max inotify watches (Linux only)
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p;
        if: ${{matrix.os == 'ubuntu-latest'}}
      - run: yarn --frozen-lockfile
      - run: yarn test:unit-js

  integration_tests:
    name: Integration tests (${{matrix.os}}, Node ${{matrix.node}})
    strategy:
      matrix:
        node: [14, 16]
        os: [ubuntu-latest, macos-latest, windows-latest]
      # These tend to be quite flakey, so one failed instance shouldn't stop
      # others from potentially succeeding
      fail-fast: false
    runs-on: ${{matrix.os}}
    needs: build-native
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: ${{matrix.node}}
      - uses: actions/download-artifact@v3
        with:
          name: build-native-${{matrix.os}}
          path: packages
      - name: Bump max inotify watches (Linux only)
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p;
        if: ${{matrix.os == 'ubuntu-latest'}}
      - run: yarn --frozen-lockfile
      - run: yarn test:integration-ci
